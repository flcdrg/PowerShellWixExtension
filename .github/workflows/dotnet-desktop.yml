name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: windows-latest

    env:
      Solution_Name: PowerShellWixExtension.sln
      Configuration: Release

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Nerdbank.GitVersioning
      uses: dotnet/nbgv@v0.4.0
      with:
        # Defines ALL version variables as environment variables, with a "NBGV_" prefix.
        setAllVars: true
        # Defines a few common version variables as environment variables, with a "Git" prefix (e.g. GitBuildVersion, GitBuildVersionSimple, GitAssemblyInformationalVersion).
        setCommonVars: true
        
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
        
    - name: NuGet Restore
      run: nuget restore

    - name: Build
      run: msbuild $env:Solution_Name

    # For some reason, running msiexec from Pester doesn't work quite right.
    - name: msiexec
      run: |
        Start-Process msiexec.exe -Wait -ArgumentList "/i Tests\PowerShellWixInlineScriptTest\bin\Release\PowerShellWixInlineScriptTest.msi /q /liwearucmopvx ${{ github.workspace }}\inlinescript-install.log"
        Start-Process msiexec.exe -Wait -ArgumentList "/x Tests\PowerShellWixInlineScriptTest\bin\Release\PowerShellWixInlineScriptTest.msi /q /liwearucmopvx ${{ github.workspace }}\inlinescript-uninstall.log"
        Start-Process msiexec.exe -Wait -ArgumentList "/i Tests\PowerShellWixTest\bin\Release\PowerShellWixTest.msi /q /liwearucmopvx ${{ github.workspace }}\script-install.log"
        Start-Process msiexec.exe -Wait -ArgumentList "/x Tests\PowerShellWixTest\bin\Release\PowerShellWixTest.msi /q /liwearucmopvx ${{ github.workspace }}\script-uninstall.log"

    - name: Pester
      id: test_module
      uses: zyborg/pester-tests-report@v1
      with:
        include_paths: tests
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tests_fail_step: true

    - uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: test logs
        path: ${{ github.workspace }}\**\*.log

    - name: Pack
      run: nuget pack .\PowerShellWixExtension.nuspec -Version "$env:NBGV_NuGetPackageVersion" -Properties "Configuration=$env:Configuration"

    - uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: ${{ github.workspace }}\PowerShellWixExtension.${{ env.NBGV_NuGetPackageVersion }}.nupkg
